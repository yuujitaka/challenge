{"version":3,"sources":["theme.js","services/api.js","hooks/useFetchPopular/index.js","components/MovieCard/styles.js","components/Rating/styles.js","components/Rating/index.js","components/MovieCard/index.js","pages/home.js","hooks/useGetMovie/index.js","components/Banner/styles.js","components/Banner/index.js","pages/movie.js","routes/index.js","hooks/useSearchMovie/index.js","components/TopBar/styles.js","components/TopBar/index.js","components/Footer/styles.js","assets/logo.svg","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createTheme","palette","primary","main","light","secondary","typography","fontFamily","api","axios","create","baseURL","interceptors","request","use","config","headers","error","Promise","reject","fetchPopular","page","a","get","response","data","useFetchPopular","useQuery","retry","refetchOnWindowFocus","CardStyled","styled","Card","CardMediaStyled","CardMedia","CardContentStyled","CardContent","RatingStyled","Rating","children","fontSize","withRouter","movie","id","title","poster_path","vote_average","history","CardActionArea","onClick","push","image","Typography","Home","useState","setPage","isFetching","LinearProgress","color","Container","maxWidth","Box","my","variant","Grid","container","spacing","results","map","result","item","xs","md","lg","display","justifyContent","Pagination","count","total_pages","onChange","e","value","getMovie","useGetMovie","enabled","BannerStyled","url","Banner","Movie","useParams","release","Date","release_date","getFullYear","backdrop_path","p","src","alt","mt","alignItems","ml","genres","genre","name","join","runtime","original_language","overview","Routes","exact","path","component","searchMovie","query","useSearchMovie","SearchInput","TextField","setQuery","isError","open","setOpen","handleChange","debounce","target","AppBar","position","Toolbar","flexGrow","style","Autocomplete","options","getOptionLabel","option","original_title","renderOption","loading","loadingText","event","noOptionsText","renderInput","params","placeholder","InputProps","startAdornment","InputAdornment","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","status_message","FooterStyled","withTheme","Footer","textAlign","mb","logo","width","App","queryClient","QueryClient","QueryClientProvider","client","ThemeProvider","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f7937a6.chunk.js","sourcesContent":["import { createTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#0d253f\",\r\n      light: \"#01b4e4\",\r\n    },\r\n    secondary: {\r\n      main: \"#90cea1\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\"inherit\"],\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n});\r\n\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    config.headers[\"Authorization\"] = \"Bearer \" + process.env.REACT_APP_API_KEY;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","import { useQuery } from \"react-query\";\r\nimport api from \"../../services/api\";\r\n\r\nconst fetchPopular = async (page) => {\r\n  const response = await api.get(`/movie/popular?page=${page}`);\r\n  return response.data;\r\n};\r\n\r\nconst useFetchPopular = (page) => {\r\n  return useQuery([\"popular\", page], () => fetchPopular(page), {\r\n    retry: false,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n\r\nexport default useFetchPopular;\r\n","import styled from \"styled-components\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nexport const CardStyled = styled(Card)`\r\n  height: 100%;\r\n`;\r\n\r\nexport const CardMediaStyled = styled(CardMedia)`\r\n  height: 370px;\r\n`;\r\n\r\nexport const CardContentStyled = styled(CardContent)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nconst RatingStyled = styled(\"div\")`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  background-color: #ff9e00;\r\n  border-radius: 4px;\r\n  padding: 0 3px;\r\n  color: white;\r\n`;\r\n\r\nexport default RatingStyled;\r\n","import StarIcon from \"@material-ui/icons/Star\";\r\nimport RatingStyled from \"./styles\";\r\n\r\nconst Rating = ({ children }) => (\r\n  <RatingStyled>\r\n    <StarIcon fontSize=\"small\" />\r\n    {children}\r\n  </RatingStyled>\r\n);\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { CardStyled, CardMediaStyled, CardContentStyled } from \"./styles\";\r\nimport Rating from \"../Rating\";\r\n\r\nconst MovieCard = ({\r\n  movie: { id, title, poster_path, vote_average },\r\n  history,\r\n}) => {\r\n  return (\r\n    <CardStyled>\r\n      <CardActionArea onClick={() => history.push(`/movie/${id}`)}>\r\n        <CardMediaStyled\r\n          //TODO: URL dinâmica\r\n          image={`https://image.tmdb.org/t/p/w500/${poster_path}`}\r\n          title={title}\r\n        />\r\n        <CardContentStyled>\r\n          <Typography>{title}</Typography>\r\n          <Rating>{vote_average}</Rating>\r\n        </CardContentStyled>\r\n      </CardActionArea>\r\n    </CardStyled>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieCard);\r\n","import { useState } from \"react\";\r\nimport useFetchPopular from \"../hooks/useFetchPopular\";\r\nimport MovieCard from \"../components/MovieCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst Home = () => {\r\n  const [page, setPage] = useState(1);\r\n  const { data, isFetching } = useFetchPopular(page);\r\n\r\n  const handleChange = (e, value) => {\r\n    setPage(value);\r\n  };\r\n  //TODO: Virtualized list\r\n  return (\r\n    <>\r\n      {isFetching && <LinearProgress color=\"secondary\" />}\r\n      <Container maxWidth=\"xl\">\r\n        <Box my={4}>\r\n          <Typography variant=\"h4\">Popular</Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={3}>\r\n          {data?.results?.map((result) => (\r\n            <Grid item xs={6} md={3} lg={2} key={result.id}>\r\n              <MovieCard movie={result} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        <Box my={4} display=\"flex\" justifyContent=\"center\">\r\n          <Pagination\r\n            count={data?.total_pages}\r\n            page={page}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useQuery } from \"react-query\";\r\nimport api from \"../../services/api\";\r\n\r\nconst getMovie = async (id) => {\r\n  const response = await api.get(`/movie/${id}`);\r\n  return response.data;\r\n};\r\n\r\nconst useGetMovie = (id) => {\r\n  return useQuery([\"movie\", id], () => getMovie(id), {\r\n    retry: false,\r\n    refetchOnWindowFocus: false,\r\n    enabled: !!id,\r\n  });\r\n};\r\n\r\nexport default useGetMovie;\r\n","import styled from \"styled-components\";\r\n\r\nconst BannerStyled = styled(\"section\")`\r\n  background-image: linear-gradient(#000000bf, #000000bf),\r\n    url(https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/${({ url }) =>\r\n      url});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  width: 100%;\r\n  background-position: center;\r\n  color: white;\r\n`;\r\n\r\nexport default BannerStyled;\r\n","import React from \"react\";\r\nimport BannerStyled from \"./styles\";\r\n\r\nconst Banner = ({ url, children }) => (\r\n  <BannerStyled url={url}>{children}</BannerStyled>\r\n);\r\n\r\nexport default Banner;\r\n","import { useParams } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nimport useGetMovie from \"../hooks/useGetMovie\";\r\nimport Rating from \"../components/Rating\";\r\nimport Banner from \"../components/Banner\";\r\n\r\nconst Movie = () => {\r\n  const { id } = useParams();\r\n  const { data, isFetching } = useGetMovie(id);\r\n\r\n  const release = new Date(data?.release_date).getFullYear();\r\n\r\n  return (\r\n    <>\r\n      {isFetching ? (\r\n        <LinearProgress color=\"secondary\" />\r\n      ) : (\r\n        <>\r\n          <Banner url={data?.backdrop_path}>\r\n            <Container>\r\n              <Grid container>\r\n                <Grid item md={3}>\r\n                  <Box p={4}>\r\n                    <img\r\n                      src={`https://image.tmdb.org/t/p/w200/${data?.poster_path}`}\r\n                      alt={data?.title}\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n\r\n                <Grid item md={9}>\r\n                  <Box mt={4} display=\"flex\" alignItems=\"baseline\">\r\n                    <Typography variant=\"h4\">\r\n                      {data?.title} ({release})\r\n                    </Typography>\r\n                    <Box ml={2}>\r\n                      <Rating>{data?.vote_average}</Rating>\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  <Typography variant=\"subtitle1\">\r\n                    {data?.genres.map((genre) => genre.name).join(\", \")} &#8226;{\" \"}\r\n                    {data?.runtime}m\r\n                  </Typography>\r\n\r\n                  <Typography variant=\"subtitle1\">\r\n                    Original Language: {data?.original_language}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          </Banner>\r\n          <Container>\r\n            <Box my={4}>\r\n              <Typography variant=\"h6\">Sinopse</Typography>\r\n              <Typography>{data?.overview}</Typography>\r\n            </Box>\r\n          </Container>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"../pages/home\";\r\nimport Movie from \"../pages/movie\";\r\n\r\nconst Routes = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route path=\"/movie/:id\" component={Movie} />\r\n  </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import { useQuery } from \"react-query\";\r\nimport api from \"../../services/api\";\r\n\r\nconst searchMovie = async (query) => {\r\n  const response = await api.get(`/search/movie?query=${query}`);\r\n  return response.data;\r\n};\r\n\r\nconst useSearchMovie = (query) => {\r\n  return useQuery([\"search\", query], () => searchMovie(query), {\r\n    retry: false,\r\n    refetchOnWindowFocus: false,\r\n    enabled: !!query,\r\n  });\r\n};\r\n\r\nexport default useSearchMovie;\r\n","import styled from \"styled-components\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst SearchInput = styled(TextField)`\r\n  width: 250px;\r\n  .MuiInputBase-input {\r\n    color: white;\r\n  }\r\n  .MuiInput-underline:before {\r\n    border-bottom: 1px solid white;\r\n  }\r\n  .MuiInput-underline:hover:not(.Mui-disabled):before {\r\n    border-bottom: 1px solid white;\r\n  }\r\n  .MuiIconButton-root {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport default SearchInput;\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { debounce } from \"lodash\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport TheatersRoundedIcon from \"@material-ui/icons/TheatersRounded\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport useSearchMovie from \"../../hooks/useSearchMovie\";\r\nimport SearchInput from \"./styles\";\r\n\r\nconst TopBar = ({ history }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const { data, isFetching, isError, error } = useSearchMovie(query);\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = debounce((e) => {\r\n    setQuery(e.target.value);\r\n  }, 500);\r\n\r\n  const handleSelect = (event, option) => {\r\n    if (option?.id) {\r\n      history.push(`/movie/${option.id}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"sticky\">\r\n        <Toolbar>\r\n          <Box flexGrow={1}>\r\n            <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\r\n              Challenge\r\n            </Typography>\r\n          </Box>\r\n          <Autocomplete\r\n            options={data?.results ?? []}\r\n            getOptionLabel={(option) => option.original_title}\r\n            renderOption={(option) => (\r\n              <>\r\n                <TheatersRoundedIcon />\r\n                <Box ml={1}>{option.original_title}</Box>\r\n              </>\r\n            )}\r\n            loading={isFetching}\r\n            loadingText=\"Carregando...\"\r\n            onChange={handleSelect}\r\n            noOptionsText={\r\n              data?.results ? \"Movie not found\" : \"Search a movie...\"\r\n            }\r\n            renderInput={(params) => (\r\n              <SearchInput\r\n                {...params}\r\n                color=\"secondary\"\r\n                placeholder=\"Search\"\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SearchIcon color=\"secondary\" />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={handleChange}\r\n              />\r\n            )}\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {isError && (\r\n        <Snackbar\r\n          open={open}\r\n          autoHideDuration={6000}\r\n          onClose={handleClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        >\r\n          <MuiAlert severity=\"error\" variant=\"filled\">\r\n            {error?.response?.data?.status_message}\r\n          </MuiAlert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(TopBar);\r\n","import styled from \"styled-components\";\r\nimport { withTheme } from \"@material-ui/core\";\r\n\r\nconst FooterStyled = withTheme(styled(\"footer\")`\r\n  background-color: ${({ theme }) => theme.palette.primary.main};\r\n  color: white;\r\n  margin-top: auto;\r\n`);\r\n\r\nexport default FooterStyled;\r\n","export default __webpack_public_path__ + \"static/media/logo.da3f379f.svg\";","import Box from \"@material-ui/core/Box\";\r\nimport FooterStyled from \"./styles\";\r\nimport logo from \"../../assets/logo.svg\";\r\n\r\nconst Footer = () => (\r\n  <FooterStyled>\r\n    <Box textAlign=\"center\" p={4}>\r\n      <Box mb={2}>\r\n        <img src={logo} alt=\"Logo\" width=\"200px\" />\r\n      </Box>\r\n\r\n      <span>\r\n        This product uses the TMDB API but is not endorsed or certified by TMDB\r\n      </span>\r\n    </Box>\r\n  </FooterStyled>\r\n);\r\n\r\nexport default Footer;\r\n","import { BrowserRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { HashRouter } from \"react-router-dom\";\nimport theme from \"./theme\";\nimport Routes from \"./routes\";\nimport TopBar from \"./components/TopBar\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const queryClient = new QueryClient();\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <HashRouter basename=\"/challenge\">\n            <TopBar />\n            <Routes />\n            <Footer />\n          </HashRouter>\n        </BrowserRouter>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}